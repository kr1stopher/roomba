#!/usr/bin/env python

Goal: 90% of open area on the map is explored. Turtlebot returns to starting position 

python imports:
	rospy 
	from nav_msgs.msg import Odometry, OccupancyGrid


initialize dimensions based on tbot model 



isExplored = []
# -1 unexplored, 0 = open, 100 = obstacle,  -2 = open & explored 

percentExplored = 0 # (open & explored)/(open & explored)+open  *100%


def exploredInit(msg):
	is explored = msg.data
	updateExplored()

def updateExplored():
	#update the explored grid based on turtlebot's  current position and dimensions 
	explored[location]= -2 for areas the turtlebot is currently located
	update percentExplored 
	
	
	
	

	
ToDo:
	Update left or right & directions to prioritize going towards unexplored areas 
	return to origin  if isExplored reaches 90%
}






if __name__=="__main__":
	rospy.init_node('roomba')
	sub = rospy.Subscriber('map', OccupancyGrid, exploredInit)
	
isExplored = 0 #percent of explorable area that has currently been explored
	while (ros not shutdown):
		sub1 = rospy.Subscriber('odom',Odometry, updateExplored)
		
			
	


